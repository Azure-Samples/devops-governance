# Build numbering format
name: $(BuildID)

pool:
  vmImage: 'ubuntu-18.04'

trigger: none

pr:
- release

variables:
  - group: e2e-gov-demo-kv

  - name: github-repo-name
    value: Azure-Samples/devops-governance

  - name: github-connection-name
    value: Azure-Samples

jobs:
- job: DetectDriftJob
  displayName: Detect Drift
  steps:
  - bash: |
      terraform init \
        -backend-config="storage_account_name=$TF_STATE_BLOB_ACCOUNT_NAME" \
        -backend-config="container_name=$TF_STATE_BLOB_CONTAINER_NAME" \
        -backend-config="key=$TF_STATE_BLOB_FILE" \
        -backend-config="sas_token=$TF_STATE_BLOB_SAS_TOKEN"
    displayName: Terraform - Init
    env:
      TF_STATE_BLOB_ACCOUNT_NAME:   $(kv-tf-state-blob-account)
      TF_STATE_BLOB_CONTAINER_NAME: $(kv-tf-state-blob-container)
      TF_STATE_BLOB_FILE:           $(kv-tf-state-blob-file)
      TF_STATE_BLOB_SAS_TOKEN:      $(kv-tf-state-sas-token)

  # Run `terraform plan` and preserve exit code and output for downstream steps
  - bash: |
      set -o pipefail
      terraform plan -detailed-exitcode -var superadmins_aad_object_id=$AAD_SUPERADMINS_GROUP_ID | tee plan-output.txt
      STATUS=${PIPESTATUS[@]}
      echo "##vso[task.setvariable variable=tfPlanExit]$("echo $STATUS")"
      [[ $STATUS == "0" ]] && exit 0 || exit 1
    continueOnError: true
    displayName: Terraform - Detect configuration drift
    name: planStep
    env:
      ARM_SUBSCRIPTION_ID:        $(kv-arm-subscription-id)
      ARM_CLIENT_ID:              $(kv-arm-client-id)
      ARM_CLIENT_SECRET:          $(kv-arm-client-secret)
      ARM_TENANT_ID:              $(kv-arm-tenant-id)
      AZDO_ORG_SERVICE_URL:       $(kv-azure-devops-org-url)
      AZDO_PERSONAL_ACCESS_TOKEN: $(kv-azure-devops-pat)
      AAD_SUPERADMINS_GROUP_ID:   $(kv-aad-superadmins-group-id)

  # Multiline variables are not supported in Azure DevOps üòï
  # - bash: |
  #     echo "##vso[task.setvariable variable=tfPlanOutput]$(cat ./plan-output.txt)"
  #   displayName: Save terraform plan output

  # - bash: echo $(tfPlanOutput)
  #   displayName: debug tf plan output

- job: PostCommentJob
  displayName: Post Results to GitHub
  dependsOn: DetectDriftJob
  variables:
    - name: has-drift
      value: ne('0', $[ dependencies.DetectDriftJob.outputs['DetectDriftJob.planStep.tfPlanExit'] ])

    # - name: tf-plan-output
    #   value: ${{ dependencies.DetectDriftJob.outputs['DetectDriftJob.planStep.tfPlanOutput'] }}

    - name: ado-org-name
      value: julie-msft

    - name: ado-project-name
      value: e2e-governance-demo

  steps:
  - task: GitHubComment@0
    condition: eq(variables['has-drift'], false)
    displayName: Post - No Drift
    inputs:
      gitHubConnection: $(github-connection-name)
      repositoryName: $(github-repo-name)
      comment: |
        üü¢ No configuration drift detected

  - task: GitHubComment@0
    condition: variables['has-drift']
    displayName: Post - Has Drift
    inputs:
      gitHubConnection: $(github-connection-name)
      repositoryName: $(github-repo-name)
      comment: |
        ‚ö†Ô∏è **Configuration drift detected!** ‚ö†Ô∏è
        Approving this Pull Request may result in destructive changes to your Azure resources. Proceed with caution!

        Please review the `terraform plan` configuration diff at Azure Pipelines:
        https://dev.azure.com/$(ado-org-name)/$(ado-project-name)/_build/results?buildId=$(BuildID)&view=results

        Sorry, the [GitHubCommentV0 task](https://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/GitHubCommentV0/task.json) only takes strings and Azure DevOps does not support multistring variables ü§∑‚Äç‚ôÄÔ∏è
